{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPntzcOrL/7ArENKJLG01e1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Vicky\n","# Prediksi\n","import pandas as pd\n","df = pd.read_csv('Heart_Disease_Prediction.csv')\n","df.head()\n","df.info()"],"metadata":{"id":"6EaDn0WyBZTB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1711512756783,"user_tz":-420,"elapsed":321,"user":{"displayName":"Vicky Sandika Putra Firdiawan","userId":"11413519679154133706"}},"outputId":"f7ecc39e-2869-4022-d59f-38ff6d2f144f"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 270 entries, 0 to 269\n","Data columns (total 14 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   Age                      270 non-null    int64  \n"," 1   Sex                      270 non-null    int64  \n"," 2   Chest pain type          270 non-null    int64  \n"," 3   BP                       270 non-null    int64  \n"," 4   Cholesterol              270 non-null    int64  \n"," 5   FBS over 120             270 non-null    int64  \n"," 6   EKG results              270 non-null    int64  \n"," 7   Max HR                   270 non-null    int64  \n"," 8   Exercise angina          270 non-null    int64  \n"," 9   ST depression            270 non-null    float64\n"," 10  Slope of ST              270 non-null    int64  \n"," 11  Number of vessels fluro  270 non-null    int64  \n"," 12  Thallium                 270 non-null    int64  \n"," 13  Heart Disease            270 non-null    object \n","dtypes: float64(1), int64(12), object(1)\n","memory usage: 29.7+ KB\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","sns.countplot(x=df['Heart Disease'],hue='Sex',data=df)\n","sns.barplot(x=df['Heart Disease'],y=df['Exercise angina'],data=df)\n","sns.barplot(x=df['Sex'],y=df['Exercise angina'],hue='Sex',data=df)\n","sns.barplot(x=df['Sex'],y=df['Cholesterol'],hue='Sex',data=df)\n","sns.barplot(x=df['Heart Disease'],y=df['Cholesterol'],hue='Heart Disease',data=df)\n","sns.lineplot(x=df['Age'],y=df['Cholesterol'],data=df)\n","sns.lineplot(x=df['Age'],y=df['ST depression'],data=df)\n","sns.barplot(x=df['Heart Disease'],y=df['ST depression'],data=df)\n","sns.heatmap(df.corr())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":658},"id":"PkCL4jj8Ct9g","executionInfo":{"status":"ok","timestamp":1711511668917,"user_tz":-420,"elapsed":3390,"user":{"displayName":"Vicky Sandika Putra Firdiawan","userId":"11413519679154133706"}},"outputId":"9de4f62f-9b5c-4e50-ff02-908b33e2bc75"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-9c8d1839e285>:11: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sns.heatmap(df.corr())\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Split the data into features (X) and target variable (y)\n","X = df.drop(columns=['Heart Disease'])\n","y = df['Heart Disease'].map({'Presence': 1, 'Absence': 0})\n","# Split the data into training and testing sets\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","# Standardize the features\n","from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)"],"metadata":{"id":"cAKYymB7C7Fw","executionInfo":{"status":"ok","timestamp":1711511908635,"user_tz":-420,"elapsed":346,"user":{"displayName":"Vicky Sandika Putra Firdiawan","userId":"11413519679154133706"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Build the model\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","model = Sequential([\n","    Dense(128, activation='relu', input_shape=(X_train.shape[1],)),\n","    Dense(64, activation='relu'),\n","    Dense(1, activation='sigmoid')\n","])\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"yPotlPtNEF4q","executionInfo":{"status":"ok","timestamp":1711512009665,"user_tz":-420,"elapsed":11356,"user":{"displayName":"Vicky Sandika Putra Firdiawan","userId":"11413519679154133706"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# Train the model\n","model.fit(X_train, y_train, epochs=50, batch_size=32, validation_data=(X_test, y_test), verbose=2)\n","# Evaluate the model\n","loss, accuracy = model.evaluate(X_test, y_test, verbose=0)\n","print(f\"Test Accuracy: {accuracy}\")\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"eMelbvJGEMqI","executionInfo":{"status":"ok","timestamp":1711512069140,"user_tz":-420,"elapsed":6039,"user":{"displayName":"Vicky Sandika Putra Firdiawan","userId":"11413519679154133706"}},"outputId":"90cf087c-abaf-4cb3-89e8-a0d23e649658"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","7/7 - 2s - loss: 0.6519 - accuracy: 0.6157 - val_loss: 0.5920 - val_accuracy: 0.8148 - 2s/epoch - 241ms/step\n","Epoch 2/50\n","7/7 - 0s - loss: 0.5467 - accuracy: 0.8102 - val_loss: 0.5017 - val_accuracy: 0.8519 - 65ms/epoch - 9ms/step\n","Epoch 3/50\n","7/7 - 0s - loss: 0.4695 - accuracy: 0.8426 - val_loss: 0.4348 - val_accuracy: 0.8519 - 54ms/epoch - 8ms/step\n","Epoch 4/50\n","7/7 - 0s - loss: 0.4179 - accuracy: 0.8611 - val_loss: 0.3839 - val_accuracy: 0.8889 - 67ms/epoch - 10ms/step\n","Epoch 5/50\n","7/7 - 0s - loss: 0.3770 - accuracy: 0.8565 - val_loss: 0.3501 - val_accuracy: 0.8889 - 64ms/epoch - 9ms/step\n","Epoch 6/50\n","7/7 - 0s - loss: 0.3551 - accuracy: 0.8611 - val_loss: 0.3305 - val_accuracy: 0.8889 - 51ms/epoch - 7ms/step\n","Epoch 7/50\n","7/7 - 0s - loss: 0.3411 - accuracy: 0.8611 - val_loss: 0.3160 - val_accuracy: 0.8889 - 72ms/epoch - 10ms/step\n","Epoch 8/50\n","7/7 - 0s - loss: 0.3273 - accuracy: 0.8565 - val_loss: 0.3147 - val_accuracy: 0.8889 - 71ms/epoch - 10ms/step\n","Epoch 9/50\n","7/7 - 0s - loss: 0.3175 - accuracy: 0.8565 - val_loss: 0.3131 - val_accuracy: 0.9074 - 79ms/epoch - 11ms/step\n","Epoch 10/50\n","7/7 - 0s - loss: 0.3080 - accuracy: 0.8704 - val_loss: 0.3116 - val_accuracy: 0.8704 - 52ms/epoch - 7ms/step\n","Epoch 11/50\n","7/7 - 0s - loss: 0.2974 - accuracy: 0.8750 - val_loss: 0.3159 - val_accuracy: 0.8889 - 47ms/epoch - 7ms/step\n","Epoch 12/50\n","7/7 - 0s - loss: 0.2881 - accuracy: 0.8796 - val_loss: 0.3124 - val_accuracy: 0.8704 - 52ms/epoch - 7ms/step\n","Epoch 13/50\n","7/7 - 0s - loss: 0.2795 - accuracy: 0.8843 - val_loss: 0.3130 - val_accuracy: 0.8704 - 57ms/epoch - 8ms/step\n","Epoch 14/50\n","7/7 - 0s - loss: 0.2713 - accuracy: 0.8889 - val_loss: 0.3075 - val_accuracy: 0.8889 - 67ms/epoch - 10ms/step\n","Epoch 15/50\n","7/7 - 0s - loss: 0.2641 - accuracy: 0.8981 - val_loss: 0.3060 - val_accuracy: 0.8889 - 77ms/epoch - 11ms/step\n","Epoch 16/50\n","7/7 - 0s - loss: 0.2548 - accuracy: 0.8981 - val_loss: 0.3073 - val_accuracy: 0.8704 - 62ms/epoch - 9ms/step\n","Epoch 17/50\n","7/7 - 0s - loss: 0.2459 - accuracy: 0.8981 - val_loss: 0.3096 - val_accuracy: 0.8704 - 48ms/epoch - 7ms/step\n","Epoch 18/50\n","7/7 - 0s - loss: 0.2389 - accuracy: 0.9074 - val_loss: 0.3136 - val_accuracy: 0.8704 - 46ms/epoch - 7ms/step\n","Epoch 19/50\n","7/7 - 0s - loss: 0.2311 - accuracy: 0.9028 - val_loss: 0.3126 - val_accuracy: 0.8519 - 63ms/epoch - 9ms/step\n","Epoch 20/50\n","7/7 - 0s - loss: 0.2235 - accuracy: 0.9120 - val_loss: 0.3063 - val_accuracy: 0.8889 - 63ms/epoch - 9ms/step\n","Epoch 21/50\n","7/7 - 0s - loss: 0.2157 - accuracy: 0.9120 - val_loss: 0.3122 - val_accuracy: 0.8704 - 69ms/epoch - 10ms/step\n","Epoch 22/50\n","7/7 - 0s - loss: 0.2078 - accuracy: 0.9167 - val_loss: 0.3154 - val_accuracy: 0.8704 - 59ms/epoch - 8ms/step\n","Epoch 23/50\n","7/7 - 0s - loss: 0.2006 - accuracy: 0.9259 - val_loss: 0.3169 - val_accuracy: 0.8704 - 47ms/epoch - 7ms/step\n","Epoch 24/50\n","7/7 - 0s - loss: 0.1964 - accuracy: 0.9306 - val_loss: 0.3147 - val_accuracy: 0.8704 - 49ms/epoch - 7ms/step\n","Epoch 25/50\n","7/7 - 0s - loss: 0.1864 - accuracy: 0.9306 - val_loss: 0.3235 - val_accuracy: 0.8704 - 49ms/epoch - 7ms/step\n","Epoch 26/50\n","7/7 - 0s - loss: 0.1788 - accuracy: 0.9398 - val_loss: 0.3311 - val_accuracy: 0.8704 - 54ms/epoch - 8ms/step\n","Epoch 27/50\n","7/7 - 0s - loss: 0.1721 - accuracy: 0.9537 - val_loss: 0.3318 - val_accuracy: 0.8704 - 66ms/epoch - 9ms/step\n","Epoch 28/50\n","7/7 - 0s - loss: 0.1657 - accuracy: 0.9583 - val_loss: 0.3356 - val_accuracy: 0.8704 - 68ms/epoch - 10ms/step\n","Epoch 29/50\n","7/7 - 0s - loss: 0.1582 - accuracy: 0.9583 - val_loss: 0.3393 - val_accuracy: 0.8704 - 67ms/epoch - 10ms/step\n","Epoch 30/50\n","7/7 - 0s - loss: 0.1512 - accuracy: 0.9630 - val_loss: 0.3445 - val_accuracy: 0.8704 - 59ms/epoch - 8ms/step\n","Epoch 31/50\n","7/7 - 0s - loss: 0.1446 - accuracy: 0.9630 - val_loss: 0.3524 - val_accuracy: 0.8704 - 77ms/epoch - 11ms/step\n","Epoch 32/50\n","7/7 - 0s - loss: 0.1401 - accuracy: 0.9676 - val_loss: 0.3559 - val_accuracy: 0.8519 - 60ms/epoch - 9ms/step\n","Epoch 33/50\n","7/7 - 0s - loss: 0.1325 - accuracy: 0.9722 - val_loss: 0.3636 - val_accuracy: 0.8704 - 86ms/epoch - 12ms/step\n","Epoch 34/50\n","7/7 - 0s - loss: 0.1262 - accuracy: 0.9722 - val_loss: 0.3739 - val_accuracy: 0.8704 - 72ms/epoch - 10ms/step\n","Epoch 35/50\n","7/7 - 0s - loss: 0.1210 - accuracy: 0.9769 - val_loss: 0.3822 - val_accuracy: 0.8704 - 81ms/epoch - 12ms/step\n","Epoch 36/50\n","7/7 - 0s - loss: 0.1154 - accuracy: 0.9769 - val_loss: 0.3903 - val_accuracy: 0.8519 - 71ms/epoch - 10ms/step\n","Epoch 37/50\n","7/7 - 0s - loss: 0.1097 - accuracy: 0.9815 - val_loss: 0.3912 - val_accuracy: 0.8704 - 85ms/epoch - 12ms/step\n","Epoch 38/50\n","7/7 - 0s - loss: 0.1047 - accuracy: 0.9815 - val_loss: 0.3978 - val_accuracy: 0.8704 - 88ms/epoch - 13ms/step\n","Epoch 39/50\n","7/7 - 0s - loss: 0.0998 - accuracy: 0.9815 - val_loss: 0.4056 - val_accuracy: 0.8519 - 71ms/epoch - 10ms/step\n","Epoch 40/50\n","7/7 - 0s - loss: 0.0951 - accuracy: 0.9815 - val_loss: 0.4125 - val_accuracy: 0.8519 - 77ms/epoch - 11ms/step\n","Epoch 41/50\n","7/7 - 0s - loss: 0.0905 - accuracy: 0.9861 - val_loss: 0.4205 - val_accuracy: 0.8333 - 81ms/epoch - 12ms/step\n","Epoch 42/50\n","7/7 - 0s - loss: 0.0866 - accuracy: 0.9861 - val_loss: 0.4277 - val_accuracy: 0.8333 - 87ms/epoch - 12ms/step\n","Epoch 43/50\n","7/7 - 0s - loss: 0.0828 - accuracy: 0.9907 - val_loss: 0.4313 - val_accuracy: 0.8333 - 98ms/epoch - 14ms/step\n","Epoch 44/50\n","7/7 - 0s - loss: 0.0786 - accuracy: 0.9907 - val_loss: 0.4405 - val_accuracy: 0.8519 - 83ms/epoch - 12ms/step\n","Epoch 45/50\n","7/7 - 0s - loss: 0.0761 - accuracy: 0.9907 - val_loss: 0.4422 - val_accuracy: 0.8519 - 84ms/epoch - 12ms/step\n","Epoch 46/50\n","7/7 - 0s - loss: 0.0734 - accuracy: 0.9907 - val_loss: 0.4471 - val_accuracy: 0.8333 - 86ms/epoch - 12ms/step\n","Epoch 47/50\n","7/7 - 0s - loss: 0.0697 - accuracy: 0.9907 - val_loss: 0.4633 - val_accuracy: 0.8333 - 65ms/epoch - 9ms/step\n","Epoch 48/50\n","7/7 - 0s - loss: 0.0686 - accuracy: 0.9907 - val_loss: 0.4668 - val_accuracy: 0.8519 - 91ms/epoch - 13ms/step\n","Epoch 49/50\n","7/7 - 0s - loss: 0.0650 - accuracy: 0.9907 - val_loss: 0.4692 - val_accuracy: 0.8519 - 84ms/epoch - 12ms/step\n","Epoch 50/50\n","7/7 - 0s - loss: 0.0621 - accuracy: 0.9954 - val_loss: 0.4796 - val_accuracy: 0.8519 - 95ms/epoch - 14ms/step\n","Test Accuracy: 0.8518518805503845\n"]},{"output_type":"execute_result","data":{"text/plain":["   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n","0   70    1                4  130          322             0            2   \n","1   67    0                3  115          564             0            2   \n","2   57    1                2  124          261             0            0   \n","3   64    1                4  128          263             0            0   \n","4   74    0                2  120          269             0            2   \n","\n","   Max HR  Exercise angina  ST depression  Slope of ST  \\\n","0     109                0            2.4            2   \n","1     160                0            1.6            2   \n","2     141                0            0.3            1   \n","3     105                1            0.2            2   \n","4     121                1            0.2            1   \n","\n","   Number of vessels fluro  Thallium Heart Disease  \n","0                        3         3      Presence  \n","1                        0         7       Absence  \n","2                        0         7      Presence  \n","3                        1         7       Absence  \n","4                        1         3       Absence  "],"text/html":["\n","  <div id=\"df-1ea4c65a-2e35-4b96-9194-42ce2e8b6d83\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Chest pain type</th>\n","      <th>BP</th>\n","      <th>Cholesterol</th>\n","      <th>FBS over 120</th>\n","      <th>EKG results</th>\n","      <th>Max HR</th>\n","      <th>Exercise angina</th>\n","      <th>ST depression</th>\n","      <th>Slope of ST</th>\n","      <th>Number of vessels fluro</th>\n","      <th>Thallium</th>\n","      <th>Heart Disease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>130</td>\n","      <td>322</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>109</td>\n","      <td>0</td>\n","      <td>2.4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>Presence</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>67</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>115</td>\n","      <td>564</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>160</td>\n","      <td>0</td>\n","      <td>1.6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>Absence</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>57</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>124</td>\n","      <td>261</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>141</td>\n","      <td>0</td>\n","      <td>0.3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>Presence</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>128</td>\n","      <td>263</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>105</td>\n","      <td>1</td>\n","      <td>0.2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>Absence</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>74</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>120</td>\n","      <td>269</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>121</td>\n","      <td>1</td>\n","      <td>0.2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Absence</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ea4c65a-2e35-4b96-9194-42ce2e8b6d83')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ea4c65a-2e35-4b96-9194-42ce2e8b6d83 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ea4c65a-2e35-4b96-9194-42ce2e8b6d83');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0481aa70-a41f-4013-934c-ff3e8161d801\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0481aa70-a41f-4013-934c-ff3e8161d801')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0481aa70-a41f-4013-934c-ff3e8161d801 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 270,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 29,\n        \"max\": 77,\n        \"num_unique_values\": 41,\n        \"samples\": [\n          50,\n          71,\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chest pain type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 94,\n        \"max\": 200,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          156,\n          200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51,\n        \"min\": 126,\n        \"max\": 564,\n        \"num_unique_values\": 144,\n        \"samples\": [\n          255,\n          229\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FBS over 120\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EKG results\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Max HR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 71,\n        \"max\": 202,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          96,\n          139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exercise angina\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST depression\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1452098393779973,\n        \"min\": 0.0,\n        \"max\": 6.2,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          2.1,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Slope of ST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of vessels fluro\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Thallium\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 3,\n        \"max\": 7,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart Disease\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Absence\",\n          \"Presence\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["#data baru\n","import numpy as np\n","new_data = np.array([[32, 1, 2, 115, 260, 1, 0, 170, 1, 1.6, 1, 0, 3]])  # Presence/absence tidak dimasukkan (target)\n","new_data_scaled = scaler.transform(new_data)\n","# Prediksi dengan menggunakan madel yang telah dilatih\n","predictions = model.predict(new_data_scaled)\n","# konversi ke yes atau no dengan  threshold (0.5)\n","binary_predictions = (predictions > 0.5).astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iPlqPubbEgwJ","executionInfo":{"status":"ok","timestamp":1711512134451,"user_tz":-420,"elapsed":334,"user":{"displayName":"Vicky Sandika Putra Firdiawan","userId":"11413519679154133706"}},"outputId":"22b082c5-9213-4162-a7c6-69482bb6c6fb"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 28ms/step\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["#\n","print(f\"Predicted Probability: {predictions[0][0]}\")\n","print(f\"Binary Prediction: {binary_predictions[0][0]}\")\n","print()\n","if (binary_predictions==0):\n","    print(\"Absence...\")\n","else:\n","    print(\"Presence\")\n","print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IpJ5ezmQEqtA","executionInfo":{"status":"ok","timestamp":1711512156605,"user_tz":-420,"elapsed":336,"user":{"displayName":"Vicky Sandika Putra Firdiawan","userId":"11413519679154133706"}},"outputId":"f4ece013-4995-4e25-93d3-8c49df6d0099"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicted Probability: 3.744523928617127e-05\n","Binary Prediction: 0\n","\n","Absence...\n","\n"]}]}]}